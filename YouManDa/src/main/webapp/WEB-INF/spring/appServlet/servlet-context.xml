<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean
				class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/html;charset=UTF-8</value>
					</list>
				</property>
			</bean>
			<bean
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
			<bean
				class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter" />
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<context:component-scan base-package="com.amiko.ymd" />
	<bean id="jdbcTemplate"
		class="org.springframework.jdbc.core.JdbcTemplate">
		<constructor-arg>
			<ref bean="dataSource" />
		</constructor-arg>
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="5242880000" />
	</bean>

	<bean id="beanNameViewResolver"
		class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<property name="order" value="0" />
	</bean>
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<!-- <property name="driverClassName" value="com.mysql.jdbc.Driver"></property> -->
		<!-- <property name="url" value="jdbc:mysql://127.0.0.1:3306/nodedb"></property> -->
		<property name="username" value="root"></property>
		<property name="password" value="mysql"></property>
		<property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy" />

		<property name="url"
			value="jdbc:log4jdbc:mysql://192.168.0.88:3306/ymd" />

	</bean>
	<!-- SqlSessionFactionBean -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="mapperLocations" value="classpath:sql/*.xml" />
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation"
			value="classpath:mybatis-config.xml" />
	</bean>
	<!-- SqlSessionTemplate -->
	<bean id="sqlSessionTemplate"
		class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" />
	</bean>
	
	<bean id="LoginInterceptor" class="com.amiko.ymd.interceptor.LoginInterceptor"></bean>
    	<bean id="LoginInterceptor2" class="com.amiko.ymd.interceptor.LoginInterceptor2"></bean>
    
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/login"/>
            <mvc:mapping path="/join"/>
            <mvc:mapping path="/insertId"/>
            <mvc:mapping path="/pwFind"/>
            
            <ref bean="LoginInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>
    
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/logout"/>
            <mvc:mapping path="/mypage/{id}"/>
            <mvc:mapping path="/mypageedit/{id}"/>
            <mvc:mapping path="deleteMyAccount"/>
            
            <ref bean="LoginInterceptor2"/>
        </mvc:interceptor>
    </mvc:interceptors>
	
</beans>
